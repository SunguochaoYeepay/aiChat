{"version":3,"file":"assets/js/182.js","mappings":"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","sources":["webpack://design-helper-frontend/./src/api/apiKeys.js","webpack://design-helper-frontend/./src/views/ApiManagement.vue","webpack://design-helper-frontend/./src/api/apiManagement.js","webpack://design-helper-frontend/./src/views/ApiManagement.vue?fb90"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API端点基础URL\r\nconst apiBaseUrl = process.env.VUE_APP_API_URL || '';\r\n\r\n/**\r\n * 获取所有API密钥列表\r\n */\r\nexport const getApiKeys = async () => {\r\n  try {\r\n    const fullUrl = `${apiBaseUrl}/api/v1/api-keys`;\r\n    console.log(`正在请求API密钥列表: ${fullUrl}`);\r\n    \r\n    const response = await axios.get(fullUrl);\r\n    \r\n    if (response.data && response.data.api_keys) {\r\n      return response.data.api_keys;\r\n    }\r\n    return [];\r\n  } catch (error) {\r\n    console.error('获取API密钥列表失败:', error);\r\n    if (error.response) {\r\n      console.error('响应状态:', error.response.status);\r\n      console.error('响应数据:', error.response.data);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 创建API密钥\r\nexport const createApiKey = (apiKeyData) => {\r\n  return axios.post(`/v1/api-keys/create`, apiKeyData);\r\n};\r\n\r\n// 更新API密钥\r\nexport const updateApiKey = (keyId, apiKeyData) => {\r\n  return axios.put(`/v1/api-keys/${keyId}/update`, apiKeyData);\r\n};\r\n\r\n// 删除API密钥\r\nexport const deleteApiKey = (keyId) => {\r\n  return axios.delete(`/v1/api-keys/${keyId}/delete`);\r\n};\r\n\r\nexport default {\r\n  getApiKeys,\r\n  createApiKey,\r\n  updateApiKey,\r\n  deleteApiKey\r\n}; ","<template>\r\n  <div class=\"api-management\">\r\n    <a-page-header\r\n      title=\"API 管理\"\r\n      sub-title=\"管理与测试系统 API 接口\"\r\n    />\r\n    \r\n    <a-card class=\"api-management-content\">\r\n      <a-tabs v-model:activeKey=\"activeTab\">\r\n        <a-tab-pane key=\"list\" tab=\"API 列表\">\r\n          <!-- API列表部分 -->\r\n          <div class=\"api-list-container\">\r\n            <div class=\"api-list-header\">\r\n              <a-button type=\"primary\" @click=\"showCreateModal\">\r\n                添加API接口\r\n              </a-button>\r\n              <a-input-search\r\n                v-model:value=\"searchKeyword\"\r\n                placeholder=\"搜索 API 接口\"\r\n                style=\"width: 250px; margin-left: 16px;\"\r\n                @search=\"onSearch\"\r\n              />\r\n            </div>\r\n            \r\n            <a-table\r\n              :dataSource=\"filteredEndpoints\"\r\n              :columns=\"columns\"\r\n              :loading=\"loading\"\r\n              rowKey=\"id\"\r\n              :pagination=\"{ pageSize: 10 }\"\r\n            >\r\n              <!-- 方法列 -->\r\n              <template #bodyCell=\"{ column, record }\">\r\n                <template v-if=\"column.dataIndex === 'method'\">\r\n                  <a-tag :color=\"getMethodColor(record.method)\">\r\n                    {{ record.method }}\r\n                  </a-tag>\r\n                </template>\r\n                \r\n                <!-- 状态列 -->\r\n                <template v-if=\"column.dataIndex === 'status'\">\r\n                  <a-tag :color=\"getStatusColor(record.status)\">\r\n                    {{ getStatusText(record.status) }}\r\n                  </a-tag>\r\n                </template>\r\n                \r\n                <!-- 权限列 -->\r\n                <template v-if=\"column.dataIndex === 'permission'\">\r\n                  <a-tag :color=\"getPermissionColor(record.permission)\">\r\n                    {{ getPermissionText(record.permission) }}\r\n                  </a-tag>\r\n                </template>\r\n                \r\n                <!-- 操作列 -->\r\n                <template v-if=\"column.dataIndex === 'action'\">\r\n                  <a-space>\r\n                    <a @click=\"showTestModal(record)\">测试</a>\r\n                    <a-divider type=\"vertical\" />\r\n                    <a @click=\"showEditModal(record)\">编辑</a>\r\n                    <a-divider type=\"vertical\" />\r\n                    <a-popconfirm\r\n                      title=\"确定要删除这个API接口吗?\"\r\n                      ok-text=\"确定\"\r\n                      cancel-text=\"取消\"\r\n                      @confirm=\"deleteEndpoint(record.id)\"\r\n                    >\r\n                      <a class=\"danger-link\">删除</a>\r\n                    </a-popconfirm>\r\n                  </a-space>\r\n                </template>\r\n              </template>\r\n            </a-table>\r\n          </div>\r\n        </a-tab-pane>\r\n        \r\n        <a-tab-pane key=\"test\" tab=\"API 测试\">\r\n          <!-- 引入现有的API测试组件 -->\r\n          <ApiTest />\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </a-card>\r\n    \r\n    <!-- API编辑模态框 -->\r\n    <a-modal\r\n      v-model:visible=\"editModalVisible\"\r\n      :title=\"isEdit ? '编辑 API 接口' : '添加 API 接口'\"\r\n      width=\"700px\"\r\n      @ok=\"handleSaveEndpoint\"\r\n      @cancel=\"closeEditModal\"\r\n      :okButtonProps=\"{ loading: saving }\"\r\n    >\r\n      <a-form \r\n        :model=\"endpointForm\" \r\n        :label-col=\"{ span: 4 }\"\r\n        :wrapper-col=\"{ span: 20 }\"\r\n      >\r\n        <a-form-item label=\"接口名称\" required>\r\n          <a-input v-model:value=\"endpointForm.name\" placeholder=\"请输入接口名称\" />\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"接口路径\" required>\r\n          <a-input v-model:value=\"endpointForm.path\" placeholder=\"请输入接口路径，例如 /api/v1/example\" />\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"请求方法\" required>\r\n          <a-select v-model:value=\"endpointForm.method\">\r\n            <a-select-option value=\"GET\">GET</a-select-option>\r\n            <a-select-option value=\"POST\">POST</a-select-option>\r\n            <a-select-option value=\"PUT\">PUT</a-select-option>\r\n            <a-select-option value=\"DELETE\">DELETE</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"接口状态\">\r\n          <a-select v-model:value=\"endpointForm.status\">\r\n            <a-select-option value=\"active\">活跃</a-select-option>\r\n            <a-select-option value=\"deprecated\">已弃用</a-select-option>\r\n            <a-select-option value=\"maintenance\">维护中</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"权限要求\">\r\n          <a-select v-model:value=\"endpointForm.permission\">\r\n            <a-select-option value=\"public\">公开</a-select-option>\r\n            <a-select-option value=\"authenticated\">需要认证</a-select-option>\r\n            <a-select-option value=\"admin\">仅管理员</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"接口描述\">\r\n          <a-textarea v-model:value=\"endpointForm.description\" :rows=\"3\" placeholder=\"请输入接口描述\" />\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"请求参数\">\r\n          <a-textarea v-model:value=\"endpointForm.requestSchemaStr\" :rows=\"5\" placeholder=\"请输入JSON格式的请求参数配置\" />\r\n          <small>输入JSON格式，例如 {\"param1\": \"string\", \"param2\": \"number\"}</small>\r\n        </a-form-item>\r\n        \r\n        <a-form-item label=\"响应格式\">\r\n          <a-textarea v-model:value=\"endpointForm.responseSchemaStr\" :rows=\"5\" placeholder=\"请输入JSON格式的响应参数配置\" />\r\n          <small>输入JSON格式，例如 {\"code\": 200, \"data\": {\"field1\": \"value\"}}</small>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n    \r\n    <!-- API测试模态框 -->\r\n    <a-modal\r\n      v-model:visible=\"testModalVisible\"\r\n      title=\"测试 API 接口\"\r\n      width=\"800px\"\r\n      footer={null}\r\n      @cancel=\"closeTestModal\"\r\n    >\r\n      <div v-if=\"currentEndpoint.id\" class=\"api-test-modal\">\r\n        <div class=\"api-test-header\">\r\n          <a-tag :color=\"getMethodColor(currentEndpoint.method)\" style=\"margin-right: 8px;\">\r\n            {{ currentEndpoint.method }}\r\n          </a-tag>\r\n          <span class=\"api-path\">{{ currentEndpoint.path }}</span>\r\n        </div>\r\n        \r\n        <p class=\"api-description\">{{ currentEndpoint.description }}</p>\r\n        \r\n        <a-divider />\r\n        \r\n        <!-- 参数输入区 -->\r\n        <div class=\"test-params-area\">\r\n          <a-form-item v-if=\"currentEndpoint.method !== 'GET'\" label=\"请求体\">\r\n            <a-textarea\r\n              v-model:value=\"testRequestBody\"\r\n              :rows=\"8\"\r\n              placeholder=\"输入 JSON 格式的请求体\"\r\n            />\r\n            <div style=\"margin-top: 8px\">\r\n              <a-button @click=\"formatTestJson\" size=\"small\">格式化 JSON</a-button>\r\n              <a-button \r\n                @click=\"useRequestSchema\" \r\n                size=\"small\" \r\n                style=\"margin-left: 8px\"\r\n              >\r\n                使用示例\r\n              </a-button>\r\n            </div>\r\n          </a-form-item>\r\n          \r\n          <a-form-item v-if=\"currentEndpoint.method === 'GET'\" label=\"查询参数\">\r\n            <a-row \r\n              v-for=\"(param, index) in testQueryParams\" \r\n              :key=\"index\" \r\n              :gutter=\"8\" \r\n              style=\"margin-bottom: 8px\"\r\n            >\r\n              <a-col :span=\"8\">\r\n                <a-input \r\n                  v-model:value=\"param.key\" \r\n                  placeholder=\"参数名\" \r\n                />\r\n              </a-col>\r\n              <a-col :span=\"14\">\r\n                <a-input \r\n                  v-model:value=\"param.value\" \r\n                  placeholder=\"参数值\" \r\n                />\r\n              </a-col>\r\n              <a-col :span=\"2\">\r\n                <a-button \r\n                  type=\"danger\"\r\n                  shape=\"circle\"\r\n                  @click=\"removeTestQueryParam(index)\"\r\n                >\r\n                  -\r\n                </a-button>\r\n              </a-col>\r\n            </a-row>\r\n            <a-button @click=\"addTestQueryParam\" style=\"width: 100%\">\r\n              添加参数\r\n            </a-button>\r\n          </a-form-item>\r\n          \r\n          <a-form-item label=\"API 密钥 (可选)\">\r\n            <a-select\r\n              v-model:value=\"testApiKey\"\r\n              style=\"width: 100%\"\r\n              placeholder=\"选择 API 密钥\"\r\n              allow-clear\r\n            >\r\n              <a-select-option v-for=\"key in apiKeys\" :key=\"key.id\" :value=\"key.key\">\r\n                {{ key.name }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </a-form-item>\r\n          \r\n          <a-form-item>\r\n            <a-button \r\n              type=\"primary\" \r\n              @click=\"executeTest\" \r\n              :loading=\"testing\"\r\n            >\r\n              发送请求\r\n            </a-button>\r\n          </a-form-item>\r\n        </div>\r\n        \r\n        <a-divider>响应</a-divider>\r\n        \r\n        <!-- 响应区域 -->\r\n        <div v-if=\"testResponse\" class=\"test-response-container\">\r\n          <div class=\"test-response-header\">\r\n            <a-tag :color=\"getStatusColor(testResponseStatus)\">\r\n              状态码: {{ testResponseStatus }}\r\n            </a-tag>\r\n            <span class=\"test-response-time\">\r\n              响应时间: {{ testResponseTime }}ms\r\n            </span>\r\n          </div>\r\n          \r\n          <a-tabs v-model:activeKey=\"activeResponseTab\">\r\n            <a-tab-pane key=\"body\" tab=\"响应体\">\r\n              <pre class=\"test-response-body\">{{ formattedTestResponse }}</pre>\r\n            </a-tab-pane>\r\n            <a-tab-pane key=\"headers\" tab=\"响应头\">\r\n              <a-table \r\n                :columns=\"headerColumns\" \r\n                :dataSource=\"testResponseHeaders\" \r\n                size=\"small\" \r\n                :pagination=\"false\"\r\n              />\r\n            </a-tab-pane>\r\n          </a-tabs>\r\n        </div>\r\n        \r\n        <div v-else-if=\"!testing\" class=\"no-response\">\r\n          <p>发送请求后将在此处显示响应</p>\r\n        </div>\r\n      </div>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport ApiTest from './ApiTest.vue';\r\nimport { \r\n  getApiEndpoints, \r\n  getApiEndpointById, \r\n  createApiEndpoint, \r\n  updateApiEndpoint, \r\n  deleteApiEndpoint,\r\n  testApiEndpoint\r\n} from '../api/apiManagement';\r\nimport { getApiKeys } from '../api/apiKeys';\r\n\r\nexport default {\r\n  name: 'ApiManagement',\r\n  \r\n  components: {\r\n    ApiTest\r\n  },\r\n  \r\n  setup() {\r\n    // 标签页状态\r\n    const activeTab = ref('list');\r\n    \r\n    // 列表状态\r\n    const loading = ref(false);\r\n    const endpoints = ref([]);\r\n    const searchKeyword = ref('');\r\n    \r\n    // 编辑模态框状态\r\n    const editModalVisible = ref(false);\r\n    const isEdit = ref(false);\r\n    const saving = ref(false);\r\n    const endpointForm = reactive({\r\n      id: null,\r\n      name: '',\r\n      path: '',\r\n      method: 'GET',\r\n      description: '',\r\n      status: 'active',\r\n      permission: 'authenticated',\r\n      requestSchemaStr: '{}',\r\n      responseSchemaStr: '{}'\r\n    });\r\n    \r\n    // 测试模态框状态\r\n    const testModalVisible = ref(false);\r\n    const currentEndpoint = reactive({});\r\n    const testApiKey = ref('');\r\n    const apiKeys = ref([]);\r\n    const testRequestBody = ref('');\r\n    const testQueryParams = ref([{ key: '', value: '' }]);\r\n    const testing = ref(false);\r\n    const testResponse = ref(null);\r\n    const testResponseStatus = ref(0);\r\n    const testResponseTime = ref(0);\r\n    const testResponseHeaders = ref([]);\r\n    const activeResponseTab = ref('body');\r\n    \r\n    // 表格列定义\r\n    const columns = [\r\n      {\r\n        title: '接口名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '接口路径',\r\n        dataIndex: 'path',\r\n        key: 'path',\r\n      },\r\n      {\r\n        title: '请求方法',\r\n        dataIndex: 'method',\r\n        key: 'method',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: '状态',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: '权限',\r\n        dataIndex: 'permission',\r\n        key: 'permission',\r\n        width: 120,\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: 150,\r\n      }\r\n    ];\r\n    \r\n    // 响应头表格列定义\r\n    const headerColumns = [\r\n      {\r\n        title: '名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '值',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n      }\r\n    ];\r\n    \r\n    // 计算属性 - 过滤后的API端点列表\r\n    const filteredEndpoints = computed(() => {\r\n      if (!searchKeyword.value) {\r\n        return endpoints.value;\r\n      }\r\n      \r\n      const keyword = searchKeyword.value.toLowerCase();\r\n      return endpoints.value.filter(endpoint => \r\n        endpoint.name.toLowerCase().includes(keyword) || \r\n        endpoint.path.toLowerCase().includes(keyword)\r\n      );\r\n    });\r\n    \r\n    // 计算属性 - 格式化的测试响应\r\n    const formattedTestResponse = computed(() => {\r\n      if (!testResponse.value) return '';\r\n      \r\n      try {\r\n        return JSON.stringify(testResponse.value, null, 2);\r\n      } catch (e) {\r\n        return testResponse.value;\r\n      }\r\n    });\r\n    \r\n    // 方法 - 获取方法颜色\r\n    const getMethodColor = (method) => {\r\n      switch (method) {\r\n        case 'GET': return 'blue';\r\n        case 'POST': return 'green';\r\n        case 'PUT': return 'orange';\r\n        case 'DELETE': return 'red';\r\n        default: return 'default';\r\n      }\r\n    };\r\n    \r\n    // 方法 - 获取状态颜色和文本\r\n    const getStatusColor = (status) => {\r\n      switch (status) {\r\n        case 'active': return 'green';\r\n        case 'deprecated': return 'red';\r\n        case 'maintenance': return 'orange';\r\n        default: return 'default';\r\n      }\r\n    };\r\n    \r\n    const getStatusText = (status) => {\r\n      switch (status) {\r\n        case 'active': return '活跃';\r\n        case 'deprecated': return '已弃用';\r\n        case 'maintenance': return '维护中';\r\n        default: return status;\r\n      }\r\n    };\r\n    \r\n    // 方法 - 获取权限颜色和文本\r\n    const getPermissionColor = (permission) => {\r\n      switch (permission) {\r\n        case 'public': return 'green';\r\n        case 'authenticated': return 'blue';\r\n        case 'admin': return 'purple';\r\n        default: return 'default';\r\n      }\r\n    };\r\n    \r\n    const getPermissionText = (permission) => {\r\n      switch (permission) {\r\n        case 'public': return '公开';\r\n        case 'authenticated': return '需要认证';\r\n        case 'admin': return '仅管理员';\r\n        default: return permission;\r\n      }\r\n    };\r\n    \r\n    // 方法 - 加载API端点列表\r\n    const loadEndpoints = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const result = await getApiEndpoints();\r\n        endpoints.value = result;\r\n      } catch (error) {\r\n        message.error('加载API列表失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 方法 - 加载API密钥列表\r\n    const loadApiKeys = async () => {\r\n      try {\r\n        const result = await getApiKeys();\r\n        apiKeys.value = result;\r\n      } catch (error) {\r\n        message.error('加载API密钥失败');\r\n      }\r\n    };\r\n    \r\n    // 方法 - 搜索\r\n    const onSearch = () => {\r\n      // 已经使用计算属性实现，无需额外处理\r\n    };\r\n    \r\n    // 方法 - 显示创建模态框\r\n    const showCreateModal = () => {\r\n      resetEndpointForm();\r\n      isEdit.value = false;\r\n      editModalVisible.value = true;\r\n    };\r\n    \r\n    // 方法 - 显示编辑模态框\r\n    const showEditModal = (record) => {\r\n      isEdit.value = true;\r\n      endpointForm.id = record.id;\r\n      endpointForm.name = record.name;\r\n      endpointForm.path = record.path;\r\n      endpointForm.method = record.method;\r\n      endpointForm.description = record.description || '';\r\n      endpointForm.status = record.status;\r\n      endpointForm.permission = record.permission;\r\n      \r\n      try {\r\n        endpointForm.requestSchemaStr = JSON.stringify(record.request_schema || {}, null, 2);\r\n        endpointForm.responseSchemaStr = JSON.stringify(record.response_schema || {}, null, 2);\r\n      } catch (e) {\r\n        endpointForm.requestSchemaStr = '{}';\r\n        endpointForm.responseSchemaStr = '{}';\r\n      }\r\n      \r\n      editModalVisible.value = true;\r\n    };\r\n    \r\n    // 方法 - 关闭编辑模态框\r\n    const closeEditModal = () => {\r\n      editModalVisible.value = false;\r\n      resetEndpointForm();\r\n    };\r\n    \r\n    // 方法 - 重置端点表单\r\n    const resetEndpointForm = () => {\r\n      endpointForm.id = null;\r\n      endpointForm.name = '';\r\n      endpointForm.path = '';\r\n      endpointForm.method = 'GET';\r\n      endpointForm.description = '';\r\n      endpointForm.status = 'active';\r\n      endpointForm.permission = 'authenticated';\r\n      endpointForm.requestSchemaStr = '{}';\r\n      endpointForm.responseSchemaStr = '{}';\r\n    };\r\n    \r\n    // 方法 - 保存端点\r\n    const handleSaveEndpoint = async () => {\r\n      saving.value = true;\r\n      \r\n      try {\r\n        // 验证必填字段\r\n        if (!endpointForm.name || !endpointForm.path || !endpointForm.method) {\r\n          message.error('请填写所有必填字段');\r\n          saving.value = false;\r\n          return;\r\n        }\r\n        \r\n        // 解析JSON\r\n        let requestSchema = {};\r\n        let responseSchema = {};\r\n        \r\n        try {\r\n          requestSchema = JSON.parse(endpointForm.requestSchemaStr);\r\n          responseSchema = JSON.parse(endpointForm.responseSchemaStr);\r\n        } catch (e) {\r\n          message.error('请求或响应参数JSON格式无效');\r\n          saving.value = false;\r\n          return;\r\n        }\r\n        \r\n        // 构建API端点对象\r\n        const endpoint = {\r\n          name: endpointForm.name,\r\n          path: endpointForm.path,\r\n          method: endpointForm.method,\r\n          description: endpointForm.description,\r\n          status: endpointForm.status,\r\n          permission: endpointForm.permission,\r\n          request_schema: requestSchema,\r\n          response_schema: responseSchema\r\n        };\r\n        \r\n        // 保存\r\n        if (isEdit.value) {\r\n          await updateApiEndpoint(endpointForm.id, endpoint);\r\n          message.success('API接口更新成功');\r\n        } else {\r\n          await createApiEndpoint(endpoint);\r\n          message.success('API接口创建成功');\r\n        }\r\n        \r\n        // 刷新列表并关闭模态框\r\n        loadEndpoints();\r\n        closeEditModal();\r\n      } catch (error) {\r\n        message.error(`保存API接口失败: ${error.message}`);\r\n      } finally {\r\n        saving.value = false;\r\n      }\r\n    };\r\n    \r\n    // 方法 - 删除端点\r\n    const deleteEndpoint = async (id) => {\r\n      try {\r\n        await deleteApiEndpoint(id);\r\n        message.success('API接口删除成功');\r\n        loadEndpoints();\r\n      } catch (error) {\r\n        message.error(`删除API接口失败: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // 方法 - 显示测试模态框\r\n    const showTestModal = async (record) => {\r\n      Object.assign(currentEndpoint, record);\r\n      testRequestBody.value = '';\r\n      testQueryParams.value = [{ key: '', value: '' }];\r\n      testApiKey.value = '';\r\n      testResponse.value = null;\r\n      testModalVisible.value = true;\r\n    };\r\n    \r\n    // 方法 - 关闭测试模态框\r\n    const closeTestModal = () => {\r\n      testModalVisible.value = false;\r\n    };\r\n    \r\n    // 方法 - 添加测试查询参数\r\n    const addTestQueryParam = () => {\r\n      testQueryParams.value.push({ key: '', value: '' });\r\n    };\r\n    \r\n    // 方法 - 删除测试查询参数\r\n    const removeTestQueryParam = (index) => {\r\n      testQueryParams.value.splice(index, 1);\r\n      \r\n      // 确保至少有一个参数输入框\r\n      if (testQueryParams.value.length === 0) {\r\n        testQueryParams.value.push({ key: '', value: '' });\r\n      }\r\n    };\r\n    \r\n    // 方法 - 格式化测试JSON\r\n    const formatTestJson = () => {\r\n      try {\r\n        const parsed = JSON.parse(testRequestBody.value);\r\n        testRequestBody.value = JSON.stringify(parsed, null, 2);\r\n      } catch (e) {\r\n        message.error('JSON格式无效');\r\n      }\r\n    };\r\n    \r\n    // 方法 - 使用请求Schema示例\r\n    const useRequestSchema = () => {\r\n      try {\r\n        testRequestBody.value = JSON.stringify(currentEndpoint.request_schema || {}, null, 2);\r\n      } catch (e) {\r\n        testRequestBody.value = '{}';\r\n      }\r\n    };\r\n    \r\n    // 方法 - 执行测试\r\n    const executeTest = async () => {\r\n      testing.value = true;\r\n      testResponse.value = null;\r\n      \r\n      try {\r\n        // 准备测试数据\r\n        let requestData = {\r\n          endpoint_id: currentEndpoint.id,\r\n        };\r\n        \r\n        // 添加API密钥\r\n        if (testApiKey.value) {\r\n          requestData.api_key = testApiKey.value;\r\n        }\r\n        \r\n        // 添加请求体\r\n        if (currentEndpoint.method !== 'GET' && testRequestBody.value) {\r\n          try {\r\n            requestData.request_body = testRequestBody.value;\r\n          } catch (e) {\r\n            // 如果JSON无效，直接使用文本\r\n            requestData.request_body = testRequestBody.value;\r\n          }\r\n        }\r\n        \r\n        // 添加查询参数\r\n        if (currentEndpoint.method === 'GET') {\r\n          testQueryParams.value.forEach(param => {\r\n            if (param.key && param.value) {\r\n              requestData[`param_${param.key}`] = param.value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        // 记录开始时间\r\n        const startTime = Date.now();\r\n        \r\n        // 执行请求\r\n        const result = await testApiEndpoint(requestData);\r\n        \r\n        // 计算响应时间\r\n        testResponseTime.value = Date.now() - startTime;\r\n        \r\n        // 设置响应\r\n        testResponse.value = result;\r\n        testResponseStatus.value = 200; // 由于是通过API执行的，无法获取真实状态码，假定成功\r\n        testResponseHeaders.value = []; // 同样无法获取真实响应头\r\n      } catch (error) {\r\n        testResponseStatus.value = error.response?.status || 500;\r\n        testResponse.value = error.response?.data || { error: error.message };\r\n        testResponseTime.value = 0;\r\n        testResponseHeaders.value = [];\r\n      } finally {\r\n        testing.value = false;\r\n      }\r\n    };\r\n    \r\n    // 生命周期钩子 - 组件挂载\r\n    onMounted(() => {\r\n      loadEndpoints();\r\n      loadApiKeys();\r\n    });\r\n    \r\n    return {\r\n      // 状态\r\n      activeTab,\r\n      loading,\r\n      endpoints,\r\n      searchKeyword,\r\n      editModalVisible,\r\n      isEdit,\r\n      saving,\r\n      endpointForm,\r\n      testModalVisible,\r\n      currentEndpoint,\r\n      testApiKey,\r\n      apiKeys,\r\n      testRequestBody,\r\n      testQueryParams,\r\n      testing,\r\n      testResponse,\r\n      testResponseStatus,\r\n      testResponseTime,\r\n      testResponseHeaders,\r\n      activeResponseTab,\r\n      \r\n      // 计算属性\r\n      filteredEndpoints,\r\n      formattedTestResponse,\r\n      \r\n      // 常量\r\n      columns,\r\n      headerColumns,\r\n      \r\n      // 方法\r\n      getMethodColor,\r\n      getStatusColor,\r\n      getStatusText,\r\n      getPermissionColor,\r\n      getPermissionText,\r\n      onSearch,\r\n      showCreateModal,\r\n      showEditModal,\r\n      closeEditModal,\r\n      handleSaveEndpoint,\r\n      deleteEndpoint,\r\n      showTestModal,\r\n      closeTestModal,\r\n      addTestQueryParam,\r\n      removeTestQueryParam,\r\n      formatTestJson,\r\n      useRequestSchema,\r\n      executeTest\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api-management {\r\n  padding: 0 16px;\r\n}\r\n\r\n.api-management-content {\r\n  margin-top: 16px;\r\n}\r\n\r\n.api-list-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.danger-link {\r\n  color: #ff4d4f;\r\n}\r\n\r\n.danger-link:hover {\r\n  color: #ff7875;\r\n}\r\n\r\n.api-test-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.api-path {\r\n  font-family: monospace;\r\n  font-size: 16px;\r\n}\r\n\r\n.api-description {\r\n  color: #666;\r\n  margin-top: 8px;\r\n}\r\n\r\n.test-response-body {\r\n  background-color: #f5f5f5;\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  max-height: 300px;\r\n  overflow: auto;\r\n  font-family: monospace;\r\n}\r\n\r\n.test-response-header {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.test-response-time {\r\n  margin-left: 12px;\r\n  color: #666;\r\n}\r\n\r\n.no-response {\r\n  text-align: center;\r\n  color: #999;\r\n  padding: 40px 0;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n}\r\n</style> ","import axios from 'axios';\r\n\r\n// 配置axios默认设置\r\naxios.defaults.withCredentials = true;  // 确保跨域请求时携带凭证（Cookie）\r\n\r\n// API端点基础URL，确保使用正确的域名和端口\r\nconst apiBaseUrl = process.env.VUE_APP_API_URL || '';\r\n\r\n// 关键修改：确保路径前缀正确，避免重复的/api\r\n// 如果Django的URLs中已经包含/api前缀，这里就不要再加/api\r\nconst endpointsPath = '/v1/endpoints';\r\n\r\n/**\r\n * 获取所有API端点列表\r\n */\r\nexport const getApiEndpoints = async () => {\r\n  try {\r\n    // 打印更详细的请求信息\r\n    const fullUrl = `${apiBaseUrl}/api${endpointsPath}`;\r\n    console.log(`正在请求API端点列表: ${fullUrl}`);\r\n    \r\n    const response = await axios.get(fullUrl);\r\n    console.log('API端点列表响应数据:', response.data);\r\n    \r\n    // 处理API响应数据，确保返回endpoints数组\r\n    if (response.data && response.data.endpoints) {\r\n      return response.data.endpoints;\r\n    } else {\r\n      console.error('API响应格式不正确:', response.data);\r\n      return [];\r\n    }\r\n  } catch (error) {\r\n    // 更详细的错误信息\r\n    console.error('获取API端点列表失败:', error);\r\n    console.error('错误详情:', error.message);\r\n    if (error.response) {\r\n      console.error('响应状态:', error.response.status);\r\n      console.error('响应数据:', error.response.data);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取单个API端点详情\r\n * @param {number} id API端点ID\r\n */\r\nexport const getApiEndpointById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${apiBaseUrl}/api/endpoint/${id}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`获取API端点详情失败 (ID: ${id}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建新的API端点\r\n * @param {Object} endpoint API端点数据\r\n */\r\nexport const createApiEndpoint = async (endpoint) => {\r\n  try {\r\n    const response = await axios.post(`${apiBaseUrl}/api/v1/endpoints/create`, endpoint);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('创建API端点失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新API端点\r\n * @param {number} id API端点ID\r\n * @param {Object} endpoint API端点数据\r\n */\r\nexport const updateApiEndpoint = async (id, endpoint) => {\r\n  try {\r\n    const response = await axios.put(`${apiBaseUrl}/api/v1/endpoints/${id}/update`, endpoint);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`更新API端点失败 (ID: ${id}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除API端点\r\n * @param {number} id API端点ID\r\n */\r\nexport const deleteApiEndpoint = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${apiBaseUrl}/api/v1/endpoints/${id}/delete`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`删除API端点失败 (ID: ${id}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 测试API端点\r\n * @param {Object} testData 测试数据\r\n */\r\nexport const testApiEndpoint = async (testData) => {\r\n  try {\r\n    const response = await axios.post(`${apiBaseUrl}/api/test/execute/`, testData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('测试API端点失败:', error);\r\n    throw error;\r\n  }\r\n}; ","import { render } from \"./ApiManagement.vue?vue&type=template&id=77c8e13c&scoped=true\"\nimport script from \"./ApiManagement.vue?vue&type=script&lang=js\"\nexport * from \"./ApiManagement.vue?vue&type=script&lang=js\"\n\nimport \"./ApiManagement.vue?vue&type=style&index=0&id=77c8e13c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f9631e568d1fa9c9629941e78f438030/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-77c8e13c\"]])\n\nexport default __exports__"],"names":["apiBaseUrl","getApiKeys","async","fullUrl","console","log","response","axios","get","data","api_keys","error","status","createApiKey","apiKeyData","post","updateApiKey","keyId","put","class","key","style","_createElementBlock","_hoisted_1","_createVNode","_component_a_page_header","title","_component_a_card","default","_withCtx","_component_a_tabs","activeKey","$setup","activeTab","_cache","$event","_component_a_tab_pane","tab","_createElementVNode","_hoisted_2","_hoisted_3","_component_a_button","type","onClick","showCreateModal","_createTextVNode","_","_component_a_input_search","value","searchKeyword","placeholder","onSearch","_component_a_table","dataSource","filteredEndpoints","columns","loading","rowKey","pagination","pageSize","bodyCell","column","record","dataIndex","_createBlock","_component_a_tag","color","getMethodColor","method","_toDisplayString","_createCommentVNode","getStatusColor","getStatusText","getPermissionColor","permission","getPermissionText","_component_a_space","showTestModal","_hoisted_4","_component_a_divider","showEditModal","_hoisted_5","_component_a_popconfirm","onConfirm","deleteEndpoint","id","_component_ApiTest","_component_a_modal","visible","editModalVisible","isEdit","width","onOk","handleSaveEndpoint","onCancel","closeEditModal","okButtonProps","saving","_component_a_form","model","endpointForm","span","_component_a_form_item","label","required","_component_a_input","name","path","_component_a_select","_component_a_select_option","_component_a_textarea","description","rows","requestSchemaStr","responseSchemaStr","testModalVisible","footer","closeTestModal","currentEndpoint","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","testRequestBody","_hoisted_11","formatTestJson","size","useRequestSchema","_Fragment","_renderList","testQueryParams","param","index","_component_a_row","gutter","_component_a_col","shape","removeTestQueryParam","addTestQueryParam","testApiKey","apiKeys","executeTest","testing","testResponse","_hoisted_12","_hoisted_13","testResponseStatus","_hoisted_14","testResponseTime","activeResponseTab","_hoisted_15","formattedTestResponse","headerColumns","testResponseHeaders","_hoisted_16","defaults","withCredentials","endpointsPath","getApiEndpoints","endpoints","message","createApiEndpoint","endpoint","updateApiEndpoint","deleteApiEndpoint","delete","testApiEndpoint","testData","components","ApiTest","setup","ref","reactive","computed","keyword","toLowerCase","filter","includes","JSON","stringify","e","loadEndpoints","result","loadApiKeys","resetEndpointForm","request_schema","response_schema","requestSchema","responseSchema","parse","success","Object","assign","push","splice","length","parsed","requestData","endpoint_id","api_key","request_body","forEach","startTime","Date","now","onMounted","__exports__","render"],"sourceRoot":""}