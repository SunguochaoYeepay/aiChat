{"version":3,"file":"assets/js/608.ff916493.js","mappings":"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","sources":["webpack://design-helper-frontend/./src/views/ApiTest.vue","webpack://design-helper-frontend/./src/views/ApiTest.vue?e104"],"sourcesContent":["<template>\r\n  <div class=\"api-test\">\r\n    <a-page-header\r\n      title=\"API 测试\"\r\n      sub-title=\"测试系统 API 接口\"\r\n    />\r\n    \r\n    <a-card class=\"api-test-content\">\r\n      <a-row :gutter=\"16\">\r\n        <a-col :span=\"8\">\r\n          <a-card title=\"API 接口列表\" class=\"endpoint-list\">\r\n            <a-input-search\r\n              v-model:value=\"searchKeyword\"\r\n              placeholder=\"搜索 API 接口\"\r\n              style=\"margin-bottom: 16px\"\r\n              @search=\"onSearch\"\r\n            />\r\n            \r\n            <a-list\r\n              size=\"small\"\r\n              :loading=\"loading\"\r\n              :data-source=\"filteredEndpoints\"\r\n              :pagination=\"{ pageSize: 10 }\"\r\n            >\r\n              <template #renderItem=\"{ item }\">\r\n                <a-list-item>\r\n                  <a-list-item-meta\r\n                    :title=\"item.name\"\r\n                    :description=\"item.path\"\r\n                  >\r\n                    <template #title>\r\n                      <a @click=\"selectEndpoint(item)\">{{ item.name }}</a>\r\n                    </template>\r\n                  </a-list-item-meta>\r\n                  <template #actions>\r\n                    <a-tag :color=\"item.method === 'GET' ? 'blue' : item.method === 'POST' ? 'green' : item.method === 'PUT' ? 'orange' : 'red'\">\r\n                      {{ item.method }}\r\n                    </a-tag>\r\n                  </template>\r\n                </a-list-item>\r\n              </template>\r\n            </a-list>\r\n          </a-card>\r\n        </a-col>\r\n        \r\n        <a-col :span=\"16\">\r\n          <a-card v-if=\"currentEndpoint.id\" :title=\"currentEndpoint.name\" class=\"api-form\">\r\n            <p>{{ currentEndpoint.description }}</p>\r\n            <a-divider />\r\n            \r\n            <a-form layout=\"vertical\">\r\n              <a-form-item label=\"请求路径\">\r\n                <a-input :value=\"currentEndpoint.path\" disabled />\r\n              </a-form-item>\r\n              \r\n              <a-form-item label=\"请求方法\">\r\n                <a-tag :color=\"currentEndpoint.method === 'GET' ? 'blue' : currentEndpoint.method === 'POST' ? 'green' : currentEndpoint.method === 'PUT' ? 'orange' : 'red'\" style=\"font-size: 14px; padding: 4px 8px;\">\r\n                  {{ currentEndpoint.method }}\r\n                </a-tag>\r\n              </a-form-item>\r\n              \r\n              <a-form-item v-if=\"currentEndpoint.method !== 'GET'\" label=\"请求体\">\r\n                <a-textarea\r\n                  v-model:value=\"requestBody\"\r\n                  :rows=\"8\"\r\n                  placeholder=\"输入 JSON 格式的请求体\"\r\n                />\r\n                <div style=\"margin-top: 8px\">\r\n                  <a-button @click=\"formatJson\" size=\"small\">格式化 JSON</a-button>\r\n                  <a-button \r\n                    @click=\"clearRequestBody\" \r\n                    size=\"small\" \r\n                    style=\"margin-left: 8px\"\r\n                  >\r\n                    清空\r\n                  </a-button>\r\n                </div>\r\n              </a-form-item>\r\n              \r\n              <a-form-item v-if=\"currentEndpoint.method === 'GET'\" label=\"查询参数\">\r\n                <a-row \r\n                  v-for=\"(param, index) in queryParams\" \r\n                  :key=\"index\" \r\n                  :gutter=\"8\" \r\n                  style=\"margin-bottom: 8px\"\r\n                >\r\n                  <a-col :span=\"8\">\r\n                    <a-input \r\n                      v-model:value=\"param.key\" \r\n                      placeholder=\"参数名\" \r\n                    />\r\n                  </a-col>\r\n                  <a-col :span=\"14\">\r\n                    <a-input \r\n                      v-model:value=\"param.value\" \r\n                      placeholder=\"参数值\" \r\n                    />\r\n                  </a-col>\r\n                  <a-col :span=\"2\">\r\n                    <a-button \r\n                      type=\"danger\"\r\n                      shape=\"circle\"\r\n                      @click=\"removeQueryParam(index)\"\r\n                    >\r\n                      -\r\n                    </a-button>\r\n                  </a-col>\r\n                </a-row>\r\n                <a-button @click=\"addQueryParam\" style=\"width: 100%\">\r\n                  添加参数\r\n                </a-button>\r\n              </a-form-item>\r\n              \r\n              <a-form-item label=\"API 密钥 (可选)\">\r\n                <a-select\r\n                  v-model:value=\"selectedApiKey\"\r\n                  style=\"width: 100%\"\r\n                  placeholder=\"选择 API 密钥\"\r\n                  allow-clear\r\n                >\r\n                  <a-select-option v-for=\"key in apiKeys\" :key=\"key.id\" :value=\"key.key\">\r\n                    {{ key.name }}\r\n                  </a-select-option>\r\n                </a-select>\r\n              </a-form-item>\r\n              \r\n              <a-form-item>\r\n                <a-button \r\n                  type=\"primary\" \r\n                  @click=\"sendRequest\" \r\n                  :loading=\"sending\"\r\n                >\r\n                  发送请求\r\n                </a-button>\r\n              </a-form-item>\r\n            </a-form>\r\n            \r\n            <a-divider>响应</a-divider>\r\n            \r\n            <div v-if=\"response\" class=\"response-container\">\r\n              <div class=\"response-header\">\r\n                <a-tag :color=\"getStatusColor(responseStatus)\">\r\n                  状态码: {{ responseStatus }}\r\n                </a-tag>\r\n                <span class=\"response-time\">\r\n                  响应时间: {{ responseTime }}ms\r\n                </span>\r\n              </div>\r\n              \r\n              <a-tabs v-model:activeKey=\"activeResponseTab\">\r\n                <a-tab-pane key=\"body\" tab=\"响应体\">\r\n                  <pre class=\"response-body\">{{ formattedResponse }}</pre>\r\n                </a-tab-pane>\r\n                <a-tab-pane key=\"headers\" tab=\"响应头\">\r\n                  <a-table \r\n                    :columns=\"headerColumns\" \r\n                    :data-source=\"responseHeaders\" \r\n                    size=\"small\" \r\n                    :pagination=\"false\"\r\n                  />\r\n                </a-tab-pane>\r\n              </a-tabs>\r\n            </div>\r\n            \r\n            <div v-else-if=\"!sending\" class=\"no-response\">\r\n              <p>发送请求后将在此处显示响应</p>\r\n            </div>\r\n          </a-card>\r\n          \r\n          <a-empty v-else description=\"请从左侧选择 API 接口\" />\r\n        </a-col>\r\n      </a-row>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, watch } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\n\r\nexport default {\r\n  name: 'ApiTest',\r\n  \r\n  setup() {\r\n    // 数据\r\n    const loading = ref(false);\r\n    const sending = ref(false);\r\n    const endpoints = ref([]);\r\n    const searchKeyword = ref('');\r\n    const activeResponseTab = ref('body');\r\n    const selectedApiKey = ref('');\r\n    const apiKeys = ref([]);\r\n    const response = ref(null);\r\n    const responseStatus = ref(0);\r\n    const responseTime = ref(0);\r\n    const responseHeaders = ref([]);\r\n    const requestBody = ref('');\r\n    const queryParams = ref([{ key: '', value: '' }]);\r\n    \r\n    const currentEndpoint = reactive({\r\n      id: null,\r\n      name: '',\r\n      path: '',\r\n      method: '',\r\n      description: ''\r\n    });\r\n    \r\n    const headerColumns = [\r\n      {\r\n        title: '名称',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n      },\r\n      {\r\n        title: '值',\r\n        dataIndex: 'value',\r\n        key: 'value'\r\n      }\r\n    ];\r\n    \r\n    // 计算属性\r\n    const filteredEndpoints = computed(() => {\r\n      if (!searchKeyword.value) {\r\n        return endpoints.value;\r\n      }\r\n      const keyword = searchKeyword.value.toLowerCase();\r\n      return endpoints.value.filter(endpoint => \r\n        endpoint.name.toLowerCase().includes(keyword) || \r\n        endpoint.path.toLowerCase().includes(keyword)\r\n      );\r\n    });\r\n    \r\n    const formattedResponse = computed(() => {\r\n      if (!response.value) return '';\r\n      try {\r\n        return JSON.stringify(response.value, null, 2);\r\n      } catch (e) {\r\n        return response.value;\r\n      }\r\n    });\r\n    \r\n    // 方法\r\n    const loadEndpoints = async () => {\r\n      loading.value = true;\r\n      try {\r\n        // 加载实际API接口列表\r\n        const response = await fetch('/api/v1/endpoints');\r\n        const data = await response.json();\r\n        if (data.endpoints) {\r\n          endpoints.value = data.endpoints;\r\n        } else {\r\n          // 如果API没有返回数据，使用示例数据\r\n          initSampleData();\r\n        }\r\n      } catch (error) {\r\n        console.error('加载 API 接口列表失败:', error);\r\n        // 加载失败时使用示例数据\r\n        initSampleData();\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    const loadApiKeys = async () => {\r\n      try {\r\n        // 加载实际API密钥\r\n        const response = await fetch('/api/v1/api-keys');\r\n        const data = await response.json();\r\n        if (data.api_keys) {\r\n          apiKeys.value = data.api_keys;\r\n        } else {\r\n          // 示例API密钥\r\n          apiKeys.value = [\r\n            { id: 1, name: '默认密钥', key: 'sk-demo-key-12345' },\r\n            { id: 2, name: '测试密钥', key: 'sk-test-key-67890' }\r\n          ];\r\n        }\r\n      } catch (error) {\r\n        console.error('加载 API 密钥失败:', error);\r\n        // 加载失败时使用示例数据\r\n        apiKeys.value = [\r\n          { id: 1, name: '默认密钥', key: 'sk-demo-key-12345' },\r\n          { id: 2, name: '测试密钥', key: 'sk-test-key-67890' }\r\n        ];\r\n      }\r\n    };\r\n    \r\n    const selectEndpoint = (endpoint) => {\r\n      Object.assign(currentEndpoint, endpoint);\r\n      \r\n      // 重置请求和响应\r\n      requestBody.value = '';\r\n      queryParams.value = [{ key: '', value: '' }];\r\n      response.value = null;\r\n      responseStatus.value = 0;\r\n      responseTime.value = 0;\r\n      responseHeaders.value = [];\r\n      \r\n      // 如果有请求体模式，尝试格式化\r\n      if (endpoint.request_schema) {\r\n        try {\r\n          requestBody.value = JSON.stringify(endpoint.request_schema, null, 2);\r\n        } catch (e) {\r\n          // 忽略错误\r\n        }\r\n      }\r\n    };\r\n    \r\n    const onSearch = () => {\r\n      // 不需要特别处理，filteredEndpoints 计算属性会自动更新\r\n    };\r\n    \r\n    const formatJson = () => {\r\n      if (!requestBody.value) return;\r\n      \r\n      try {\r\n        const parsed = JSON.parse(requestBody.value);\r\n        requestBody.value = JSON.stringify(parsed, null, 2);\r\n      } catch (e) {\r\n        message.error('JSON 格式错误: ' + e.message);\r\n      }\r\n    };\r\n    \r\n    const clearRequestBody = () => {\r\n      requestBody.value = '';\r\n    };\r\n    \r\n    const addQueryParam = () => {\r\n      queryParams.value.push({ key: '', value: '' });\r\n    };\r\n    \r\n    const removeQueryParam = (index) => {\r\n      queryParams.value.splice(index, 1);\r\n      if (queryParams.value.length === 0) {\r\n        addQueryParam();\r\n      }\r\n    };\r\n    \r\n    const getStatusColor = (status) => {\r\n      if (status >= 200 && status < 300) return 'green';\r\n      if (status >= 300 && status < 400) return 'blue';\r\n      if (status >= 400 && status < 500) return 'orange';\r\n      if (status >= 500) return 'red';\r\n      return 'default';\r\n    };\r\n    \r\n    const buildQueryString = () => {\r\n      const validParams = queryParams.value.filter(param => param.key && param.value);\r\n      if (validParams.length === 0) return '';\r\n      \r\n      const params = new URLSearchParams();\r\n      validParams.forEach(param => {\r\n        params.append(param.key, param.value);\r\n      });\r\n      \r\n      return `?${params.toString()}`;\r\n    };\r\n    \r\n    const sendRequest = async () => {\r\n      if (!currentEndpoint.id) {\r\n        message.warning('请先选择一个 API 接口');\r\n        return;\r\n      }\r\n      \r\n      sending.value = true;\r\n      const startTime = Date.now();\r\n      \r\n      try {\r\n        // 构建请求 URL\r\n        let url = currentEndpoint.path;\r\n        if (currentEndpoint.method === 'GET') {\r\n          url += buildQueryString();\r\n        }\r\n        \r\n        // 构建请求头\r\n        const headers = {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        };\r\n        \r\n        if (selectedApiKey.value) {\r\n          headers['X-API-Key'] = selectedApiKey.value;\r\n        }\r\n        \r\n        // 发送请求\r\n        const fetchOptions = {\r\n          method: currentEndpoint.method,\r\n          headers: headers\r\n        };\r\n        \r\n        if (currentEndpoint.method !== 'GET' && requestBody.value) {\r\n          try {\r\n            fetchOptions.body = JSON.stringify(JSON.parse(requestBody.value));\r\n          } catch (e) {\r\n            message.warning('请求体不是有效的 JSON 格式，将按原样发送');\r\n            fetchOptions.body = requestBody.value;\r\n          }\r\n        }\r\n        \r\n        const result = await fetch(url, fetchOptions);\r\n        \r\n        // 处理响应\r\n        responseStatus.value = result.status;\r\n        responseTime.value = Date.now() - startTime;\r\n        \r\n        // 处理响应头\r\n        const headers_arr = [];\r\n        result.headers.forEach((value, name) => {\r\n          headers_arr.push({ name, value });\r\n        });\r\n        responseHeaders.value = headers_arr;\r\n        \r\n        // 处理响应体\r\n        const contentType = result.headers.get('content-type') || '';\r\n        if (contentType.includes('application/json')) {\r\n          response.value = await result.json();\r\n        } else if (contentType.includes('text/')) {\r\n          response.value = await result.text();\r\n        } else {\r\n          response.value = `[二进制数据 - ${contentType}]`;\r\n        }\r\n        \r\n        message.success(`请求成功，状态码: ${result.status}`);\r\n      } catch (error) {\r\n        message.error('发送请求失败: ' + error.message);\r\n        responseStatus.value = 0;\r\n        responseTime.value = Date.now() - startTime;\r\n        responseHeaders.value = [];\r\n        response.value = { error: error.message };\r\n      } finally {\r\n        sending.value = false;\r\n      }\r\n    };\r\n    \r\n    // 初始化示例数据\r\n    const initSampleData = () => {\r\n      endpoints.value = [\r\n        {\r\n          id: 1,\r\n          name: '获取聊天完成',\r\n          path: '/api/v1/chat/completions',\r\n          method: 'POST',\r\n          description: '发送消息到模型并获取回复',\r\n          request_schema: {\r\n            messages: [\r\n              { role: \"system\", content: \"你是一个有用的AI助手。\" },\r\n              { role: \"user\", content: \"你好，请介绍一下自己。\" }\r\n            ],\r\n            stream: false,\r\n            template_type: \"general\"\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '分析图像',\r\n          path: '/api/v1/analyze-image',\r\n          method: 'POST',\r\n          description: '分析图像并获取描述',\r\n          request_schema: {\r\n            image_url: \"https://example.com/image.jpg\",\r\n            prompt: \"描述这张图片\"\r\n          }\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '知识库搜索',\r\n          path: '/api/v1/knowledge/search',\r\n          method: 'POST',\r\n          description: '在知识库中搜索相关内容',\r\n          request_schema: {\r\n            query: \"如何使用知识库搜索功能?\",\r\n            kb_ids: [1, 2],\r\n            limit: 5\r\n          }\r\n        },\r\n        {\r\n          id: 4,\r\n          name: '获取提示词模板',\r\n          path: '/api/v1/templates/',\r\n          method: 'GET',\r\n          description: '获取所有提示词模板'\r\n        },\r\n        {\r\n          id: 5,\r\n          name: '获取知识库列表',\r\n          path: '/api/v1/knowledge/',\r\n          method: 'GET',\r\n          description: '获取所有知识库'\r\n        }\r\n      ];\r\n    };\r\n    \r\n    // 生命周期钩子\r\n    const initData = () => {\r\n      loadEndpoints();\r\n      loadApiKeys();\r\n    };\r\n    \r\n    // 调用初始化\r\n    initData();\r\n    \r\n    return {\r\n      loading,\r\n      sending,\r\n      endpoints,\r\n      searchKeyword,\r\n      currentEndpoint,\r\n      apiKeys,\r\n      selectedApiKey,\r\n      requestBody,\r\n      queryParams,\r\n      response,\r\n      responseStatus,\r\n      responseTime,\r\n      responseHeaders,\r\n      headerColumns,\r\n      activeResponseTab,\r\n      filteredEndpoints,\r\n      formattedResponse,\r\n      selectEndpoint,\r\n      onSearch,\r\n      formatJson,\r\n      clearRequestBody,\r\n      addQueryParam,\r\n      removeQueryParam,\r\n      getStatusColor,\r\n      sendRequest\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api-test {\r\n  padding: 24px;\r\n}\r\n\r\n.api-test-content {\r\n  margin-top: 24px;\r\n}\r\n\r\n.endpoint-list {\r\n  height: 100%;\r\n}\r\n\r\n.api-form {\r\n  min-height: 600px;\r\n}\r\n\r\n.response-container {\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n  padding: 16px;\r\n  background: #fafafa;\r\n}\r\n\r\n.response-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.response-time {\r\n  color: #999;\r\n  font-size: 14px;\r\n}\r\n\r\n.response-body {\r\n  background: #f5f5f5;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  overflow: auto;\r\n  max-height: 400px;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.no-response {\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #999;\r\n  background: #fafafa;\r\n  border-radius: 4px;\r\n}\r\n</style> ","import { render } from \"./ApiTest.vue?vue&type=template&id=20689566&scoped=true\"\nimport script from \"./ApiTest.vue?vue&type=script&lang=js\"\nexport * from \"./ApiTest.vue?vue&type=script&lang=js\"\n\nimport \"./ApiTest.vue?vue&type=style&index=0&id=20689566&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f9631e568d1fa9c9629941e78f438030/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20689566\"]])\n\nexport default __exports__"],"names":["class","style","key","_createElementBlock","_hoisted_1","_createVNode","_component_a_page_header","title","_component_a_card","default","_withCtx","_component_a_row","gutter","_component_a_col","span","_component_a_input_search","value","$setup","searchKeyword","_cache","$event","placeholder","onSearch","_component_a_list","size","loading","filteredEndpoints","pagination","pageSize","renderItem","item","_component_a_list_item","actions","_component_a_tag","color","method","_createTextVNode","_toDisplayString","_","_component_a_list_item_meta","name","description","path","_createElementVNode","onClick","selectEndpoint","_hoisted_2","currentEndpoint","id","_createBlock","_component_a_divider","_component_a_form","layout","_component_a_form_item","label","_component_a_input","disabled","_component_a_textarea","requestBody","rows","_hoisted_3","_component_a_button","formatJson","clearRequestBody","_createCommentVNode","_Fragment","_renderList","queryParams","param","index","type","shape","removeQueryParam","addQueryParam","_component_a_select","selectedApiKey","apiKeys","_component_a_select_option","sendRequest","sending","response","_hoisted_4","_hoisted_5","getStatusColor","responseStatus","_hoisted_6","responseTime","_component_a_tabs","activeKey","activeResponseTab","_component_a_tab_pane","tab","_hoisted_7","formattedResponse","_component_a_table","columns","headerColumns","responseHeaders","_hoisted_8","_component_a_empty","setup","ref","endpoints","reactive","dataIndex","computed","keyword","toLowerCase","filter","endpoint","includes","JSON","stringify","e","loadEndpoints","async","fetch","data","json","initSampleData","error","console","loadApiKeys","api_keys","Object","assign","request_schema","parsed","parse","message","push","splice","length","status","buildQueryString","validParams","params","URLSearchParams","forEach","append","toString","warning","startTime","Date","now","url","headers","fetchOptions","body","result","headers_arr","contentType","get","text","success","messages","role","content","stream","template_type","image_url","prompt","query","kb_ids","limit","initData","__exports__","render"],"sourceRoot":""}