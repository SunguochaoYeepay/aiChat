{"version":3,"file":"assets/js/413.js","mappings":"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","sources":["webpack://design-helper-frontend/./src/views/KnowledgeBase.vue","webpack://design-helper-frontend/./src/api/knowledgeChunks.js","webpack://design-helper-frontend/./src/views/KnowledgeBase.vue?1440"],"sourcesContent":["<template>\r\n  <div class=\"knowledge-base\">\r\n    <div class=\"page-title\">\r\n      <h2>知识库管理</h2>\r\n      <p class=\"sub-title\">管理系统的知识库文档和分块</p>\r\n      <div class=\"action-buttons\">\r\n        <a-button type=\"primary\" @click=\"importKnowledge\" style=\"margin-right: 8px\">导入知识</a-button>\r\n        <a-button type=\"default\" @click=\"refreshKnowledgeBases\">刷新</a-button>\r\n      </div>\r\n    </div>\r\n\r\n    <a-card>\r\n      <a-tabs v-model:activeKey=\"activeTab\">\r\n        <a-tab-pane key=\"knowledge\" tab=\"知识库管理\">\r\n          <a-table\r\n            :columns=\"columns\"\r\n            :data-source=\"knowledgeList\"\r\n            :loading=\"loading\"\r\n            row-key=\"id\"\r\n          >\r\n            <template #bodyCell=\"{ column, record }\">\r\n              <template v-if=\"column.key === 'actions'\">\r\n                <a-space>\r\n                  <a-button type=\"link\" @click=\"viewContent(record)\">查看内容</a-button>\r\n                  <a-button type=\"link\" @click=\"viewChunks(record)\">查看分块</a-button>\r\n                  <a-button type=\"link\" @click=\"indexKnowledge(record.id)\" :disabled=\"record.is_indexed\">\r\n                    {{ record.is_indexed ? '已向量化' : '向量化' }}\r\n                  </a-button>\r\n                  <a-popconfirm\r\n                    title=\"确定要删除此知识库?\"\r\n                    @confirm=\"deleteKnowledge(record.id)\"\r\n                    ok-text=\"确定\"\r\n                    cancel-text=\"取消\"\r\n                  >\r\n                    <a-button type=\"link\" danger>删除</a-button>\r\n                  </a-popconfirm>\r\n                </a-space>\r\n              </template>\r\n            </template>\r\n          </a-table>\r\n        </a-tab-pane>\r\n        <a-tab-pane key=\"chunks\" tab=\"分块管理\">\r\n          <div style=\"margin-bottom: 16px\">\r\n            <a-select\r\n              v-model:value=\"selectedKnowledgeBase\"\r\n              placeholder=\"选择知识库\"\r\n              style=\"width: 300px; margin-right: 16px\"\r\n              @change=\"loadChunks\"\r\n            >\r\n              <a-select-option v-for=\"kb in knowledgeList\" :key=\"kb.id\" :value=\"kb.id\">\r\n                {{ kb.name }}\r\n              </a-select-option>\r\n            </a-select>\r\n            <a-button type=\"primary\" @click=\"loadChunks\" :disabled=\"!selectedKnowledgeBase\">加载分块</a-button>\r\n          </div>\r\n          \r\n          <a-table\r\n            :columns=\"chunkColumns\"\r\n            :data-source=\"chunksList\"\r\n            :loading=\"chunksLoading\"\r\n            row-key=\"id\"\r\n          >\r\n            <template #bodyCell=\"{ column, record }\">\r\n              <template v-if=\"column.key === 'content'\">\r\n                <div style=\"max-height: 100px; overflow: auto;\">\r\n                  {{ record.content }}\r\n                </div>\r\n              </template>\r\n              <template v-if=\"column.key === 'is_indexed'\">\r\n                <a-tag :color=\"record.is_indexed ? 'green' : 'red'\">\r\n                  {{ record.is_indexed ? '已向量化' : '未向量化' }}\r\n                </a-tag>\r\n              </template>\r\n              <template v-if=\"column.key === 'actions'\">\r\n                <a-space>\r\n                  <a-button type=\"link\" @click=\"editChunk(record)\">编辑</a-button>\r\n                  <a-button \r\n                    type=\"link\" \r\n                    @click=\"vectorizeChunk(record.id)\" \r\n                    :disabled=\"record.is_indexed\"\r\n                  >\r\n                    向量化\r\n                  </a-button>\r\n                  <a-popconfirm\r\n                    title=\"确定要删除此分块?\"\r\n                    @confirm=\"deleteChunk(record.id)\"\r\n                    ok-text=\"确定\"\r\n                    cancel-text=\"取消\"\r\n                  >\r\n                    <a-button type=\"link\" danger>删除</a-button>\r\n                  </a-popconfirm>\r\n                </a-space>\r\n              </template>\r\n            </template>\r\n          </a-table>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n    </a-card>\r\n\r\n    <!-- 知识库内容预览模态框 -->\r\n    <a-modal\r\n      v-model:visible=\"contentModalVisible\"\r\n      :title=\"currentKnowledge.name\"\r\n      width=\"800px\"\r\n      :footer=\"null\"\r\n    >\r\n      <div class=\"knowledge-content-preview\">\r\n        <pre>{{ currentKnowledge.content }}</pre>\r\n      </div>\r\n    </a-modal>\r\n\r\n    <!-- 知识库分块模态框 -->\r\n    <a-modal\r\n      v-model:visible=\"chunksModalVisible\"\r\n      :title=\"`${currentKnowledge.name} - 分块管理`\"\r\n      width=\"900px\"\r\n      :footer=\"null\"\r\n    >\r\n      <a-spin :spinning=\"chunksLoading\">\r\n        <a-table \r\n          :columns=\"chunkColumns\" \r\n          :data-source=\"knowledgeChunks\" \r\n          :pagination=\"{ pageSize: 5 }\"\r\n        >\r\n          <template #bodyCell=\"{ column, record }\">\r\n            <template v-if=\"column.key === 'content'\">\r\n              <div style=\"max-height: 100px; overflow: auto;\">\r\n                {{ record.content }}\r\n              </div>\r\n            </template>\r\n            <template v-if=\"column.key === 'is_indexed'\">\r\n              <a-tag :color=\"record.is_indexed ? 'green' : 'red'\">\r\n                {{ record.is_indexed ? '已向量化' : '未向量化' }}\r\n              </a-tag>\r\n            </template>\r\n            <template v-if=\"column.key === 'actions'\">\r\n              <a-space>\r\n                <a-button type=\"link\" size=\"small\" @click=\"editChunk(record)\">编辑</a-button>\r\n                <a-button \r\n                  type=\"link\" \r\n                  size=\"small\" \r\n                  @click=\"vectorizeChunk(record.id)\" \r\n                  :disabled=\"record.is_indexed\"\r\n                >\r\n                  向量化\r\n                </a-button>\r\n                <a-popconfirm\r\n                  title=\"确定要删除此分块?\"\r\n                  @confirm=\"deleteChunk(record.id)\"\r\n                  ok-text=\"确定\"\r\n                  cancel-text=\"取消\"\r\n                >\r\n                  <a-button type=\"link\" danger size=\"small\">删除</a-button>\r\n                </a-popconfirm>\r\n              </a-space>\r\n            </template>\r\n          </template>\r\n        </a-table>\r\n      </a-spin>\r\n    </a-modal>\r\n\r\n    <!-- 导入知识模态框 -->\r\n    <a-modal\r\n      v-model:visible=\"importModalVisible\"\r\n      title=\"导入知识库\"\r\n      @ok=\"submitImport\"\r\n      :confirmLoading=\"importLoading\"\r\n    >\r\n      <a-form layout=\"vertical\">\r\n        <a-form-item label=\"从文件导入\">\r\n          <a-upload-dragger\r\n            name=\"file\"\r\n            :multiple=\"false\"\r\n            :before-upload=\"beforeUpload\"\r\n            :custom-request=\"customUploadRequest\"\r\n          >\r\n            <p class=\"ant-upload-drag-icon\">\r\n              <a-icon type=\"inbox\" />\r\n            </p>\r\n            <p class=\"ant-upload-text\">点击或拖拽文件到此区域上传</p>\r\n            <p class=\"ant-upload-hint\">支持上传 Markdown 文件</p>\r\n          </a-upload-dragger>\r\n        </a-form-item>\r\n        \r\n        <a-divider>或者</a-divider>\r\n        \r\n        <a-form-item label=\"从目录导入\">\r\n          <a-input \r\n            v-model:value=\"importDirectory\" \r\n            placeholder=\"请输入知识库文件所在目录的绝对路径\" \r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n\r\n    <!-- 编辑分块模态框 -->\r\n    <a-modal\r\n      v-model:visible=\"editChunkModalVisible\"\r\n      title=\"编辑知识库分块\"\r\n      @ok=\"saveChunk\"\r\n      :confirmLoading=\"saveChunkLoading\"\r\n      width=\"800px\"\r\n    >\r\n      <a-form layout=\"vertical\">\r\n        <a-form-item label=\"所属知识库\" v-if=\"editingChunk.knowledge_base\">\r\n          <a-input v-model:value=\"editingChunk.knowledge_base_name\" disabled />\r\n        </a-form-item>\r\n        <a-form-item label=\"分块内容\">\r\n          <a-textarea \r\n            v-model:value=\"editingChunk.content\" \r\n            :rows=\"10\" \r\n            placeholder=\"请输入分块内容...\" \r\n          />\r\n        </a-form-item>\r\n        <a-form-item label=\"元数据\">\r\n          <a-input \r\n            v-model:value=\"editingChunk.metadata_str\" \r\n            placeholder=\"元数据 (JSON 格式)\" \r\n          />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport knowledgeBaseApi from '../api/knowledgeBase';\r\nimport knowledgeChunkApi from '../api/knowledgeChunks';\r\n\r\nexport default {\r\n  name: 'KnowledgeBase',\r\n  \r\n  setup() {\r\n    const loading = ref(false);\r\n    const chunksLoading = ref(false);\r\n    const knowledgeList = ref([]);\r\n    const chunksList = ref([]);\r\n    const knowledgeChunks = ref([]);\r\n    const contentModalVisible = ref(false);\r\n    const chunksModalVisible = ref(false);\r\n    const importModalVisible = ref(false);\r\n    const editChunkModalVisible = ref(false);\r\n    const importLoading = ref(false);\r\n    const saveChunkLoading = ref(false);\r\n    const importDirectory = ref('');\r\n    const activeTab = ref('knowledge');\r\n    const selectedKnowledgeBase = ref(null);\r\n    \r\n    const currentKnowledge = reactive({\r\n      id: null,\r\n      name: '',\r\n      content: ''\r\n    });\r\n    \r\n    const editingChunk = reactive({\r\n      id: null,\r\n      knowledge_base: null,\r\n      knowledge_base_name: '',\r\n      content: '',\r\n      is_indexed: false,\r\n      metadata: {},\r\n      metadata_str: '{}'\r\n    });\r\n    \r\n    const columns = [\r\n      {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: 80\r\n      },\r\n      {\r\n        title: '知识库名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: 200\r\n      },\r\n      {\r\n        title: '描述',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        width: 300\r\n      },\r\n      {\r\n        title: '文件路径',\r\n        dataIndex: 'file_path',\r\n        key: 'file_path',\r\n        width: 300\r\n      },\r\n      {\r\n        title: '更新时间',\r\n        dataIndex: 'updated_at',\r\n        key: 'updated_at',\r\n        width: 180\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'actions',\r\n        width: 280\r\n      }\r\n    ];\r\n    \r\n    const chunkColumns = [\r\n      {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: 60\r\n      },\r\n      {\r\n        title: '内容',\r\n        dataIndex: 'content',\r\n        key: 'content',\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: '向量化状态',\r\n        dataIndex: 'is_indexed',\r\n        key: 'is_indexed',\r\n        width: 100\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'created_at',\r\n        key: 'created_at',\r\n        width: 180\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'actions',\r\n        width: 200\r\n      }\r\n    ];\r\n    \r\n    // 加载知识库列表\r\n    const loadKnowledgeList = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await knowledgeBaseApi.getKnowledgeBases();\r\n        knowledgeList.value = response.data || [];\r\n      } catch (error) {\r\n        message.error('加载知识库列表失败: ' + error.message);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 刷新知识库列表\r\n    const refreshKnowledgeBases = () => {\r\n      loadKnowledgeList();\r\n    };\r\n    \r\n    // 查看知识库内容\r\n    const viewContent = async (record) => {\r\n      try {\r\n        const response = await knowledgeBaseApi.getKnowledgeBase(record.id);\r\n        const data = response.data;\r\n        \r\n        currentKnowledge.id = data.id;\r\n        currentKnowledge.name = data.name;\r\n        currentKnowledge.content = data.content;\r\n        \r\n        contentModalVisible.value = true;\r\n      } catch (error) {\r\n        message.error('获取知识库内容失败: ' + error.message);\r\n      }\r\n    };\r\n    \r\n    // 查看知识库分块\r\n    const viewChunks = async (record) => {\r\n      currentKnowledge.id = record.id;\r\n      currentKnowledge.name = record.name;\r\n      chunksModalVisible.value = true;\r\n      await loadKnowledgeChunks(record.id);\r\n    };\r\n    \r\n    // 加载知识库分块\r\n    const loadKnowledgeChunks = async (knowledgeBaseId) => {\r\n      chunksLoading.value = true;\r\n      try {\r\n        const response = await knowledgeChunkApi.getChunks(knowledgeBaseId);\r\n        knowledgeChunks.value = response.data || [];\r\n      } catch (error) {\r\n        message.error('加载知识库分块失败: ' + error.message);\r\n      } finally {\r\n        chunksLoading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 加载分块列表（用于分块管理标签页）\r\n    const loadChunks = async () => {\r\n      if (!selectedKnowledgeBase.value) {\r\n        chunksList.value = [];\r\n        return;\r\n      }\r\n      \r\n      chunksLoading.value = true;\r\n      try {\r\n        const response = await knowledgeChunkApi.getChunks(selectedKnowledgeBase.value);\r\n        chunksList.value = response.data || [];\r\n      } catch (error) {\r\n        message.error('加载分块失败: ' + error.message);\r\n      } finally {\r\n        chunksLoading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 向量化知识库\r\n    const indexKnowledge = async (id) => {\r\n      try {\r\n        const response = await knowledgeBaseApi.indexKnowledgeBase(id);\r\n        if (response.data.status === 'success') {\r\n          message.success(response.data.message || '知识库向量化成功');\r\n          loadKnowledgeList();\r\n        } else {\r\n          message.error(response.data.message || '知识库向量化失败');\r\n        }\r\n      } catch (error) {\r\n        message.error('向量化知识库失败: ' + error.message);\r\n      }\r\n    };\r\n    \r\n    // 删除知识库\r\n    const deleteKnowledge = async (id) => {\r\n      try {\r\n        await knowledgeBaseApi.deleteKnowledgeBase(id);\r\n        message.success('知识库删除成功');\r\n        loadKnowledgeList();\r\n      } catch (error) {\r\n        message.error('删除知识库失败: ' + error.message);\r\n      }\r\n    };\r\n    \r\n    // 编辑分块\r\n    const editChunk = (chunk) => {\r\n      editingChunk.id = chunk.id;\r\n      editingChunk.knowledge_base = chunk.knowledge_base;\r\n      \r\n      // 查找知识库名称\r\n      const kb = knowledgeList.value.find(k => k.id === chunk.knowledge_base);\r\n      editingChunk.knowledge_base_name = kb ? kb.name : `知识库 #${chunk.knowledge_base}`;\r\n      \r\n      editingChunk.content = chunk.content;\r\n      editingChunk.is_indexed = chunk.is_indexed;\r\n      editingChunk.metadata = chunk.metadata || {};\r\n      editingChunk.metadata_str = JSON.stringify(chunk.metadata || {}, null, 2);\r\n      \r\n      editChunkModalVisible.value = true;\r\n    };\r\n    \r\n    // 保存分块\r\n    const saveChunk = async () => {\r\n      saveChunkLoading.value = true;\r\n      try {\r\n        // 尝试解析元数据\r\n        let metadata = {};\r\n        try {\r\n          metadata = JSON.parse(editingChunk.metadata_str);\r\n        } catch (e) {\r\n          message.error('元数据必须是有效的 JSON 格式');\r\n          saveChunkLoading.value = false;\r\n          return;\r\n        }\r\n        \r\n        await knowledgeChunkApi.updateChunk(editingChunk.id, {\r\n          knowledge_base: editingChunk.knowledge_base,\r\n          content: editingChunk.content,\r\n          metadata: metadata\r\n        });\r\n        \r\n        message.success('分块更新成功');\r\n        editChunkModalVisible.value = false;\r\n        \r\n        // 刷新分块列表\r\n        if (chunksModalVisible.value) {\r\n          await loadKnowledgeChunks(currentKnowledge.id);\r\n        }\r\n        if (activeTab.value === 'chunks') {\r\n          await loadChunks();\r\n        }\r\n      } catch (error) {\r\n        message.error('更新分块失败: ' + error.message);\r\n      } finally {\r\n        saveChunkLoading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 向量化分块\r\n    const vectorizeChunk = async (id) => {\r\n      try {\r\n        const response = await knowledgeChunkApi.vectorizeChunk(id);\r\n        if (response.data.status === 'success') {\r\n          message.success(response.data.message || '分块向量化成功');\r\n          \r\n          // 刷新分块列表\r\n          if (chunksModalVisible.value) {\r\n            await loadKnowledgeChunks(currentKnowledge.id);\r\n          }\r\n          if (activeTab.value === 'chunks') {\r\n            await loadChunks();\r\n          }\r\n        } else {\r\n          message.error(response.data.message || '分块向量化失败');\r\n        }\r\n      } catch (error) {\r\n        message.error('向量化分块失败: ' + error.message);\r\n      }\r\n    };\r\n    \r\n    // 删除分块\r\n    const deleteChunk = async (id) => {\r\n      try {\r\n        await knowledgeChunkApi.deleteChunk(id);\r\n        message.success('分块删除成功');\r\n        \r\n        // 刷新分块列表\r\n        if (chunksModalVisible.value) {\r\n          await loadKnowledgeChunks(currentKnowledge.id);\r\n        }\r\n        if (activeTab.value === 'chunks') {\r\n          await loadChunks();\r\n        }\r\n      } catch (error) {\r\n        message.error('删除分块失败: ' + error.message);\r\n      }\r\n    };\r\n    \r\n    // 打开导入模态框\r\n    const importKnowledge = () => {\r\n      importModalVisible.value = true;\r\n    };\r\n    \r\n    // 上传前验证\r\n    const beforeUpload = (file) => {\r\n      const isMarkdown = file.type === 'text/markdown' || file.name.endsWith('.md');\r\n      if (!isMarkdown) {\r\n        message.error('只能上传 Markdown 文件!');\r\n      }\r\n      return isMarkdown;\r\n    };\r\n    \r\n    // 自定义上传\r\n    const customUploadRequest = async ({ file, onSuccess, onError }) => {\r\n      try {\r\n        const response = await knowledgeBaseApi.uploadFile(file);\r\n        if (response.data.status === 'success') {\r\n          message.success(response.data.message || '文件上传成功');\r\n          onSuccess();\r\n          loadKnowledgeList();\r\n        } else {\r\n          message.error(response.data.message || '文件上传失败');\r\n          onError();\r\n        }\r\n      } catch (error) {\r\n        message.error('上传失败: ' + error.message);\r\n        onError();\r\n      }\r\n    };\r\n    \r\n    // 提交导入\r\n    const submitImport = async () => {\r\n      if (!importDirectory.value) {\r\n        message.warning('请输入导入目录');\r\n        return;\r\n      }\r\n      \r\n      importLoading.value = true;\r\n      try {\r\n        const response = await knowledgeBaseApi.importFromDirectory(importDirectory.value);\r\n        if (response.data.status === 'success') {\r\n          message.success(response.data.message || '导入成功');\r\n          importModalVisible.value = false;\r\n          loadKnowledgeList();\r\n        } else {\r\n          message.error(response.data.message || '导入失败');\r\n        }\r\n      } catch (error) {\r\n        message.error('导入知识库失败: ' + error.message);\r\n      } finally {\r\n        importLoading.value = false;\r\n      }\r\n    };\r\n    \r\n    onMounted(() => {\r\n      loadKnowledgeList();\r\n    });\r\n    \r\n    return {\r\n      loading,\r\n      chunksLoading,\r\n      knowledgeList,\r\n      chunksList,\r\n      knowledgeChunks,\r\n      columns,\r\n      chunkColumns,\r\n      contentModalVisible,\r\n      chunksModalVisible,\r\n      importModalVisible,\r\n      editChunkModalVisible,\r\n      importLoading,\r\n      saveChunkLoading,\r\n      importDirectory,\r\n      currentKnowledge,\r\n      editingChunk,\r\n      activeTab,\r\n      selectedKnowledgeBase,\r\n      refreshKnowledgeBases,\r\n      viewContent,\r\n      viewChunks,\r\n      loadKnowledgeChunks,\r\n      loadChunks,\r\n      indexKnowledge,\r\n      deleteKnowledge,\r\n      editChunk,\r\n      saveChunk,\r\n      vectorizeChunk,\r\n      deleteChunk,\r\n      importKnowledge,\r\n      beforeUpload,\r\n      customUploadRequest,\r\n      submitImport\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.knowledge-base {\r\n  width: 100%;\r\n}\r\n\r\n.page-title {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-title h2 {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.sub-title {\r\n  color: rgba(0, 0, 0, 0.45);\r\n  font-size: 14px;\r\n}\r\n\r\n.action-buttons {\r\n  margin-top: 16px;\r\n}\r\n\r\n.knowledge-content-preview {\r\n  max-height: 500px;\r\n  overflow: auto;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 4px;\r\n  padding: 16px;\r\n  background-color: #fafafa;\r\n}\r\n\r\n.knowledge-content-preview pre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n}\r\n</style> ","import axios from 'axios';\r\n\r\n// API基础路径\r\nconst API_URL = '/api/v1/chunks/';\r\n\r\n/**\r\n * 知识库分块API\r\n */\r\nconst knowledgeChunkApi = {\r\n  /**\r\n   * 获取所有知识库分块\r\n   * @param {number} knowledgeBaseId 可选，按知识库过滤\r\n   */\r\n  getChunks(knowledgeBaseId = null) {\r\n    let url = API_URL;\r\n    if (knowledgeBaseId) {\r\n      url += `?knowledge_base=${knowledgeBaseId}`;\r\n    }\r\n    return axios.get(url);\r\n  },\r\n  \r\n  /**\r\n   * 获取单个知识库分块\r\n   * @param {number} id 分块ID\r\n   */\r\n  getChunk(id) {\r\n    return axios.get(`${API_URL}${id}/`);\r\n  },\r\n  \r\n  /**\r\n   * 创建知识库分块\r\n   * @param {object} chunkData 分块数据\r\n   */\r\n  createChunk(chunkData) {\r\n    return axios.post(API_URL, chunkData);\r\n  },\r\n  \r\n  /**\r\n   * 更新知识库分块\r\n   * @param {number} id 分块ID\r\n   * @param {object} chunkData 分块数据\r\n   */\r\n  updateChunk(id, chunkData) {\r\n    return axios.put(`${API_URL}${id}/`, chunkData);\r\n  },\r\n  \r\n  /**\r\n   * 删除知识库分块\r\n   * @param {number} id 分块ID\r\n   */\r\n  deleteChunk(id) {\r\n    return axios.delete(`${API_URL}${id}/`);\r\n  },\r\n  \r\n  /**\r\n   * 向量化知识库分块\r\n   * @param {number} id 分块ID\r\n   */\r\n  vectorizeChunk(id) {\r\n    return axios.post(`${API_URL}${id}/vectorize/`);\r\n  }\r\n};\r\n\r\nexport default knowledgeChunkApi; ","import { render } from \"./KnowledgeBase.vue?vue&type=template&id=f7c93668&scoped=true\"\nimport script from \"./KnowledgeBase.vue?vue&type=script&lang=js\"\nexport * from \"./KnowledgeBase.vue?vue&type=script&lang=js\"\n\nimport \"./KnowledgeBase.vue?vue&type=style&index=0&id=f7c93668&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/.pnpm/vue-loader@17.4.2_@vue+comp_f9631e568d1fa9c9629941e78f438030/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f7c93668\"]])\n\nexport default __exports__"],"names":["class","style","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_a_button","type","onClick","$setup","importKnowledge","default","_withCtx","_cache","_createTextVNode","_","refreshKnowledgeBases","_component_a_card","_component_a_tabs","activeKey","activeTab","$event","_component_a_tab_pane","tab","_component_a_table","columns","knowledgeList","loading","bodyCell","column","record","_createBlock","_component_a_space","viewContent","viewChunks","indexKnowledge","id","disabled","is_indexed","_toDisplayString","_component_a_popconfirm","title","onConfirm","deleteKnowledge","danger","_createCommentVNode","_hoisted_4","_component_a_select","value","selectedKnowledgeBase","placeholder","onChange","loadChunks","_Fragment","_renderList","kb","_component_a_select_option","name","chunkColumns","chunksList","chunksLoading","_hoisted_5","content","_component_a_tag","color","editChunk","vectorizeChunk","deleteChunk","_component_a_modal","visible","contentModalVisible","currentKnowledge","width","footer","_hoisted_6","chunksModalVisible","_component_a_spin","spinning","knowledgeChunks","pagination","pageSize","_hoisted_7","size","importModalVisible","onOk","submitImport","confirmLoading","importLoading","_component_a_form","layout","_component_a_form_item","label","_component_a_upload_dragger","multiple","beforeUpload","customUploadRequest","_hoisted_8","_component_a_icon","_component_a_divider","_component_a_input","importDirectory","editChunkModalVisible","saveChunk","saveChunkLoading","editingChunk","knowledge_base","knowledge_base_name","_component_a_textarea","rows","metadata_str","API_URL","knowledgeChunkApi","getChunks","knowledgeBaseId","url","axios","get","getChunk","createChunk","chunkData","post","updateChunk","put","delete","setup","ref","reactive","metadata","dataIndex","ellipsis","loadKnowledgeList","async","response","knowledgeBaseApi","getKnowledgeBases","data","error","message","getKnowledgeBase","loadKnowledgeChunks","indexKnowledgeBase","status","success","deleteKnowledgeBase","chunk","find","k","JSON","stringify","parse","e","file","isMarkdown","endsWith","onSuccess","onError","uploadFile","importFromDirectory","warning","onMounted","__exports__","render"],"sourceRoot":""}